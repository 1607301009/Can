C51 COMPILER V9.60.0.0   MAIN                                                              06/25/2021 02:42:34 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          /** main.c */
   2          #include <reg52.h>
   3          
   4          unsigned char T0RH = 0; // 定时器 T0 重载值的高字节
   5          unsigned char T0RL = 0; // 定时器 T0 重载值的低字节
   6          
   7          void ConfigTimer0(unsigned int ms);
   8          extern void UartDriver();
   9          extern void ConfigUART(unsigned int baud);
  10          extern void UartRxMonitor(unsigned char ms);
  11          extern void UartWrite(unsigned char *buf, unsigned char len);
  12          
  13          void main() {
  14   1        EA = 1;           // 总中断使能
  15   1        ConfigTimer0(1);  // 配置定时器 T0 定时 1ms
  16   1        ConfigUART(9600); // 设置波特率 9600
  17   1      
  18   1        while (1) {
  19   2          UartDriver();   // 调用串口驱动程序
  20   2        }
  21   1      }
  22          
  23          /* 串口动作函数，参数 buf 是接收到的命令帧指针，参数 len 是命令帧的长度 */
  24          void UartAction(unsigned char *buf, unsigned char len) {
  25   1        buf[len++] = '\r'; // 在接收到的数据帧后添加回车符
  26   1        buf[len++] = '\n'; // 在接收到的数据帧后添加换行符
  27   1      
  28   1        UartWrite(buf, len);
  29   1      }
  30          
  31          /* 配置并启动定时器 T0，参数 ms 是定时时间 */
  32          void ConfigTimer0(unsigned int ms) {
  33   1        unsigned long tmp; // 临时变量
  34   1      
  35   1        tmp = 11059200 / 12;              // 定时器计数频率
  36   1        tmp = (tmp * ms) / 1000;          // 计算计数值
  37   1        tmp = 65536 - tmp;                // 计算定时器初始值
  38   1        tmp = tmp + 33;                   // 补偿由于中断响应延迟造成的误差
  39   1      
  40   1        T0RH = (unsigned char)(tmp >> 8); // 拆分定时值为高低位
  41   1        T0RL = (unsigned char)tmp;
  42   1        TMOD &= 0xF0;                     // 定时器 T0 控制位置 0
  43   1        TMOD |= 0x01;                     // 配置定时器 T0 为工作模式 1
  44   1        TH0 = T0RH;
  45   1        TL0 = T0RL;                       // 定时值存储寄存器赋初值
  46   1        ET0 = 1;                          // 定时器 T0 中断使能
  47   1        TR0 = 1;                          // 启动定时器 T0
  48   1      }
  49          
  50          /* 定时器 T0 中断服务函数 */
  51          void InterruptTimer0() interrupt 1 {
  52   1        TH0 = T0RH;
  53   1        TL0 = T0RL;       // 定时值存储寄存器重新赋初值
  54   1        UartRxMonitor(1); // 调用串口接收监控函数
C51 COMPILER V9.60.0.0   MAIN                                                              06/25/2021 02:42:34 PAGE 2   

  55   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    244    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2       7
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
